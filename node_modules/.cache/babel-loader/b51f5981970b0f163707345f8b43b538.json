{"ast":null,"code":"import _classCallCheck from \"/Users/jofermin/Desktop/FRONTEND/REACT/React_Project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jofermin/Desktop/FRONTEND/REACT/React_Project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jofermin/Desktop/FRONTEND/REACT/React_Project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jofermin/Desktop/FRONTEND/REACT/React_Project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jofermin/Desktop/FRONTEND/REACT/React_Project/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/jofermin/Desktop/FRONTEND/REACT/React_Project/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/jofermin/Desktop/FRONTEND/REACT/React_Project/src/components/AddComment.jsx\";\nimport React, { Component } from 'react';\nimport * as firebase from \"firebase\";\n\nvar AddComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddComment, _Component);\n\n  function AddComment() {\n    var _this;\n\n    _classCallCheck(this, AddComment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddComment).call(this));\n    _this.state = {\n      for: '',\n      against: '',\n      err: {},\n      err2: {},\n      errtext: 'Add For Comment',\n      errtext2: 'Add Against Comment'\n    };\n\n    _this.handleChangeF = function (f) {\n      _this.setState({\n        for: f.target.value\n      });\n    };\n\n    _this.handleChangeA = function (a) {\n      _this.setState({\n        against: a.target.value\n      });\n    };\n\n    _this.handleSubmitF = function (e) {\n      e.preventDefault();\n      console.log(e);\n\n      if (_this.state.for === \"\") {\n        _this.setState({\n          err: {\n            borderColor: \"red\"\n          },\n          errtext: 'Invalid Input'\n        });\n\n        return;\n      }\n\n      firebase.database().ref('posts/' + _this.props.my_key + \"/for\").push({\n        text: _this.state.for,\n        upvote: 0,\n        downvote: 0\n      });\n\n      _this.setState({\n        text: '',\n        err: {},\n        errtext: 'Add For Comment',\n        for: ''\n      });\n    };\n\n    _this.handleSubmitA = function (e) {\n      e.preventDefault();\n\n      if (_this.state.against === \"\") {\n        _this.setState({\n          err2: {\n            borderColor: \"red\"\n          },\n          errtext2: 'Invalid Input'\n        });\n\n        return;\n      }\n\n      firebase.database().ref('posts/' + _this.props.my_key + \"/against\").push({\n        text: _this.state.against,\n        upvote: 0,\n        downvote: 0\n      });\n\n      _this.setState({\n        text: '',\n        err2: {},\n        errtext2: 'Add Against Comment',\n        against: ''\n      });\n    };\n\n    _this.handleChangeF = _this.handleChangeF.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeA = _this.handleChangeA.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmitF = _this.handleSubmitF.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmitA = _this.handleSubmitA.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(AddComment, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"comment_submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"submit_for\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        placeholder: this.state.errtext,\n        onChange: this.handleChangeF,\n        value: this.state.for,\n        id: \"c-for\",\n        style: this.state.err,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"Fors\",\n        type: \"submit\",\n        onClick: this.handleSubmitF,\n        className: \"submit_me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \" FOR \")), React.createElement(\"div\", {\n        className: \"submit-against\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        placeholder: this.state.errtext2,\n        onChange: this.handleChangeA,\n        value: this.state.against,\n        id: \"c-against\",\n        style: this.state.err2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"Agains\",\n        type: \"submit\",\n        onClick: this.handleSubmitA,\n        className: \"submit_me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \" AGAINST \")));\n    }\n  }]);\n\n  return AddComment;\n}(Component);\n\nexport default AddComment;","map":{"version":3,"sources":["/Users/jofermin/Desktop/FRONTEND/REACT/React_Project/src/components/AddComment.jsx"],"names":["React","Component","firebase","AddComment","state","for","against","err","err2","errtext","errtext2","handleChangeF","f","setState","target","value","handleChangeA","a","handleSubmitF","e","preventDefault","console","log","borderColor","database","ref","props","my_key","push","text","upvote","downvote","handleSubmitA","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport * as firebase from \"firebase\";\n\n\nclass AddComment extends Component {\n  constructor() {\n    super();\n    this.handleChangeF = this.handleChangeF.bind(this);\n    this.handleChangeA = this.handleChangeA.bind(this);\n    this.handleSubmitF = this.handleSubmitF.bind(this);\n    this.handleSubmitA = this.handleSubmitA.bind(this);\n  }\n  state = {\n    for: '',\n    against: '',\n    err: {},\n    err2: {},\n    errtext:'Add For Comment',\n    errtext2:'Add Against Comment'\n  };\n\n  handleChangeF = (f) => {\n    this.setState({\n      for: f.target.value\n    });\n  }\n\n  handleChangeA = (a) => {\n    this.setState({\n      against: a.target.value\n    });\n  }\n\n  handleSubmitF = (e) => {\n    e.preventDefault();\n    console.log(e);\n    if (this.state.for === \"\"){\n      this.setState({\n        err: {\n          borderColor: \"red\",\n        },\n        errtext:'Invalid Input',\n      });\n      return;\n    }\n    firebase.database().ref('posts/' + this.props.my_key + \"/for\").push({\n      text: this.state.for,\n      upvote: 0,\n      downvote: 0,\n    });\n\n    this.setState({\n      text: '',\n      err: {},\n      errtext:'Add For Comment',\n      for: ''\n    });\n  }\n\n  handleSubmitA = (e) => {\n    e.preventDefault();\n    if (this.state.against === \"\"){\n      this.setState({\n        err2: {\n          borderColor: \"red\",\n        },\n        errtext2:'Invalid Input',\n      });\n      return;\n    }\n    \n    firebase.database().ref('posts/' + this.props.my_key + \"/against\").push({\n      text: this.state.against,\n      upvote: 0,\n      downvote: 0,\n    });\n\n    this.setState({\n      text: '',\n      err2: {},\n      errtext2:'Add Against Comment',\n      against: ''\n    });\n  }\n\n\n  render() {\n    \n    return (\n      <div className=\"comment_submit\">\n        <div className=\"submit_for\">\n          <textarea \n            placeholder={this.state.errtext}\n            onChange={ this.handleChangeF } \n            value={ this.state.for }\n            id=\"c-for\"\n            style={this.state.err}\n          />\n          <button id=\"Fors\"  \n            type=\"submit\" \n            onClick={ this.handleSubmitF }\n            className=\"submit_me\"\n          > FOR </button>\n        </div>\n        <div className=\"submit-against\">\n          <textarea \n            placeholder={this.state.errtext2} \n            onChange={ this.handleChangeA } \n            value={ this.state.against }\n            id=\"c-against\"\n            style={this.state.err2}\n          />\n          <button id=\"Agains\"\n            type=\"submit\" \n            onClick={ this.handleSubmitA }\n            className=\"submit_me\"\n          > AGAINST </button> \n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default AddComment;\n"]},"metadata":{},"sourceType":"module"}