{"ast":null,"code":"\"use strict\";\n/**\n * Small wrapper to wrap your custom type check so that you can use `myCustomType.isRequired` in a similar fasion to React's built-in types.\n * \n * Usage:\n *      \n *      var type = propType(function isFoo(props, name){  \n *          if(props[name] !== \"foo\")\n *              return new TypeError(\"not a foo\");\n *      });\n * \n *      // optional by default:\n *      assert.ok( ! type(null) );\n * \n *      // required like so:\n *      assert.ok( type.isRequired(null) );\n * \n */\n\nfunction propType(typeCheck) {\n  var type = function type(props, propName) {\n    if (props[propName]) return typeCheck.apply(null, arguments);\n  };\n\n  Object.defineProperty(type, \"isRequired\", {\n    get: function get() {\n      return typeCheck;\n    }\n  });\n  return type;\n}\n\nmodule.exports = propType;","map":null,"metadata":{},"sourceType":"script"}