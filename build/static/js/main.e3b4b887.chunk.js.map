{"version":3,"sources":["globals/pen-square-solid.svg","globals/DQ.png","globals/firebase-config.js","globals/Nav.jsx","globals/App.jsx","components/AddComment.jsx","globals/ViewPost.jsx","components/Posts.jsx","components/AddPost.jsx","globals/About.jsx","routes.js","index.js","utils/registerServiceWorker.js"],"names":["module","exports","__webpack_require__","p","firebase_config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Nav","react_default","a","createElement","className","es","to","alt","src","logo","href","id","img","Component","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","posts","loading","app","firebase","config","postsRef","ref","on","snapshot","setState","val","globals_Nav","props","children","React","cloneElement","AddComment","for","against","err","err2","errtext","errtext2","handleChangeF","f","target","value","handleChangeA","handleSubmitF","e","preventDefault","console","log","my_key","push","text","upvote","downvote","borderColor","handleSubmitA","bind","assertThisInitialized","placeholder","onChange","style","type","onClick","FontAwesome","require","ViewPost","handleCommentUpvote","post","key","set","handleCommentDownvote","title","_this2","location","components_AddComment","keys","reverse","map","name","size","withRouter","Posts","handleUpvote","handleDownvote","pathname","hash","toString","Posts_FontAwesome","AddPost","handleChange","handleSubmit","browserHistory","alert","class","About","Routes","path","component","ReactDOM","render","routes","history","document","getElementById","navigator","window","addEventListener","swUrl","concat","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error"],"mappings":"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","file":"static/js/main.e3b4b887.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pen-square-solid.2e8421c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/DQ.5531687c.png\";","export default {\n\tapiKey: \"AIzaSyDi7xtxVvgTR8XaFFoUF9dtubfeOMM7TtU\",\n\tauthDomain: \"react-reddit-9d42a.firebaseapp.com\",\n\tdatabaseURL: \"https://react-reddit-9d42a.firebaseio.com\",\n\tprojectId: \"react-reddit-9d42a\",\n\tstorageBucket: \"react-reddit-9d42a.appspot.com\",\n\tmessagingSenderId: \"225820114112\"\n};\n","import img from './pen-square-solid.svg'\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router';\nimport logo from './DQ.png';\n\n\nclass Nav extends Component {\n  render() {\n    return (\n      <div className=\"Nav\">\n      \t<Link to={\"/\"}><img className=\"logo\" alt=\"logo-icon\" src={logo} /></Link>\n      \t<ul className=\"nav-list\">\n        \t<li><a href=\"/about\"> About </a></li>\n        \n          <li><a href=\"/\"> Home </a></li>\n        </ul>\n        <div className = \"writeDiv\"><Link to={\"add-post\"}><img id =\"writeTest\" src={img} alt=\"test\"/></Link></div>\n\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport * as firebase from \"firebase\";\n\nimport config from './firebase-config';\nimport Nav from './Nav';\nimport './css/App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    // Initialize Firebase\n    this.app = firebase.initializeApp(config);\n  }\n\n  state = {\n    posts: [],\n    loading: true\n  };\n\n  componentWillMount() {\n    let postsRef = firebase.database().ref('posts');\n\n    let _this = this;\n\n    postsRef.on('value', function(snapshot) {\n      _this.setState({\n        posts: snapshot.val(),\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav/>\n        {this.props.children && React.cloneElement(this.props.children, {\n          // https://github.com/ReactTraining/react-router/blob/v3/examples/passing-props-to-children/app.js#L56-L58\n          firebase: firebase.database(),\n          posts: this.state.posts,\n          loading: this.state.loading\n        })}\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n\nimport * as firebase from \"firebase\";\n\n\nclass AddComment extends Component {\n  constructor() {\n    super();\n    this.handleChangeF = this.handleChangeF.bind(this);\n    this.handleChangeA = this.handleChangeA.bind(this);\n    this.handleSubmitF = this.handleSubmitF.bind(this);\n    this.handleSubmitA = this.handleSubmitA.bind(this);\n  }\n  state = {\n    for: '',\n    against: '',\n    err: {},\n    err2: {},\n    errtext:'Add For Comment',\n    errtext2:'Add Against Comment'\n  };\n\n  handleChangeF = (f) => {\n    this.setState({\n      for: f.target.value\n    });\n  }\n\n  handleChangeA = (a) => {\n    this.setState({\n      against: a.target.value\n    });\n  }\n\n  handleSubmitF = (e) => {\n    e.preventDefault();\n    console.log(e);\n    if (this.state.for === \"\"){\n      this.setState({\n        err: {\n          borderColor: \"red\",\n        },\n        errtext:'Invalid Input',\n      });\n      return;\n    }\n    firebase.database().ref('posts/' + this.props.my_key + \"/for\").push({\n      text: this.state.for,\n      upvote: 0,\n      downvote: 0,\n    });\n\n    this.setState({\n      text: '',\n      err: {},\n      errtext:'Add For Comment',\n      for: ''\n    });\n  }\n\n  handleSubmitA = (e) => {\n    e.preventDefault();\n    if (this.state.against === \"\"){\n      this.setState({\n        err2: {\n          borderColor: \"red\",\n        },\n        errtext2:'Invalid Input',\n      });\n      return;\n    }\n    \n    firebase.database().ref('posts/' + this.props.my_key + \"/against\").push({\n      text: this.state.against,\n      upvote: 0,\n      downvote: 0,\n    });\n\n    this.setState({\n      text: '',\n      err2: {},\n      errtext2:'Add Against Comment',\n      against: ''\n    });\n  }\n\n\n  render() {\n    \n    return (\n      <div className=\"comment_submit\">\n        <div className=\"submit_for\">\n          <textarea \n            placeholder={this.state.errtext}\n            onChange={ this.handleChangeF } \n            value={ this.state.for }\n            id=\"c-for\"\n            style={this.state.err}\n          />\n          <button id=\"Fors\"  \n            type=\"submit\" \n            onClick={ this.handleSubmitF }\n            className=\"submit_me\"\n          > FOR </button>\n        </div>\n        <div className=\"submit-against\">\n          <textarea \n            placeholder={this.state.errtext2} \n            onChange={ this.handleChangeA } \n            value={ this.state.against }\n            id=\"c-against\"\n            style={this.state.err2}\n          />\n          <button id=\"Agains\"\n            type=\"submit\" \n            onClick={ this.handleSubmitA }\n            className=\"submit_me\"\n          > AGAINST </button> \n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default AddComment;\n","import React, { Component } from 'react';\n\nimport { withRouter } from \"react-router\";\n\nimport AddComment from \"../components/AddComment\";\n\nvar FontAwesome = require('react-fontawesome');\n\n\n\nclass ViewPost extends Component { \n  handleCommentUpvote = (post, my_key, type) => {\n    this.props.firebase.ref('posts/' + this.state.key + \"/\" + type + \"/\" + my_key).set({\n      text: post.text,\n      upvote: post.upvote + 1,\n      downvote: post.downvote\n    });\n  }\n\n  handleCommentDownvote = (post, my_key, type) => {\n    this.props.firebase.ref('posts/' + this.state.key + \"/\" + type + \"/\" + my_key).set({\n      text: post.text,\n      upvote: post.upvote,\n      downvote: post.downvote + 1\n    });\n\n  }\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n    \tkey: '',\n      title: '',\n      for: {},\n      against: {},\n    };\n  }\n\tcomponentDidMount() {\n      var key = this.props.location.state.id.key;\n      var current_post = this.props.firebase.ref(\"posts/\" + key );\n      current_post.on('value', snapshot => {\n      this.setState({\n      \tkey: key,\n        title: snapshot.val().title,\n        upvote: snapshot.val().upvote,\n        downvote: snapshot.val().downvote,\n        for: snapshot.val().for,\n        against: snapshot.val().against,\n      });\n    });\n  };\n\trender() {\n\t\tlet posts = this.props.posts;\n    let _this = this;\n    if (this.props.loading) {\n      return (\n        <div>\n          <img className=\"loading\" alt=\"loading icon\" src=\"https://loading.io/spinners/typing/lg.-text-entering-comment-loader.gif\"/>\n        </div>\n      );\n    }\n\t\treturn (\n\t      <div className=\"ViewPosts\">\n          <div className=\"title\">\n            {this.state.title}\n          </div>\n            \n          <AddComment my_key = {this.props.location.state.id.key}/>\n\n          <div className = \"comment_section\">\n          <div className = \"LEFT\">\n          { !!_this.state.for &&\n            Object.keys(this.state.for).reverse().map(function(key){\n              return(\n                  <div className=\"for_comments\">\n                  <p className = \"comment\"> {_this.state.for[key].text} </p>\n                   <div className = \"buttonContainer\">\n                      <div onClick={ _this.handleCommentUpvote.bind(this, _this.state.for[key], key, \"for\") }> \n                          <FontAwesome\n                            className='sortUp'\n                            name='sort-up'\n                            size='lg'\n                            // spin\n                          />\n                        <span className=\"up\">{ _this.state.for[key].upvote }</span>\n                      </div>\n                      <div onClick={ _this.handleCommentDownvote.bind(this, _this.state.for[key], key, \"for\") }> \n                          <FontAwesome\n                            className='sortDown'\n                            name='sort-down'\n                            size='lg'\n                            // spin\n                          />\n                        <span className=\"down\">{ _this.state.for[key].downvote} </span>\n                      </div>\n                  </div>\n                  </div>\n\n                );\n            })\n          }\n          </div>\n          <div className = \"RIGHT\">\n          { !!_this.state.against &&\n            Object.keys(_this.state.against).reverse().map(function(key){\n              return(\n                <div className = \"against_comments\">\n                  <p className = \"comment\"> {_this.state.against[key].text} </p>\n                   <div className = \"buttonContainer\">\n                      <div onClick={ _this.handleCommentUpvote.bind(this, _this.state.against[key], key, \"against\") }> \n                          <FontAwesome\n                            className='sortUp'\n                            name='sort-up'\n                            size='lg'\n                            // spin\n                          />\n                        <span className=\"up\">{ _this.state.against[key].upvote }</span>\n                      </div>\n                      <div onClick={ _this.handleCommentDownvote.bind(this, _this.state.against[key], key, \"against\") }> \n                          <FontAwesome\n                            className='sortDown'\n                            name='sort-down'\n                            size='lg'\n                            // spin\n                          />\n                        <span className=\"down\">{ _this.state.against[key].downvote} </span>\n                      </div>\n                  </div>\n\n\n                </div>\n\n                );\n            })\n          }\n\t      </div>\n        </div>\n        </div>\n\n\n\t    );\n\t}\n};\nexport default withRouter(ViewPost);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router';\nvar FontAwesome = require('react-fontawesome');\n\nclass Posts extends Component {\n  handleUpvote = (post, key) => {\n    this.props.firebase.ref('posts/' + key).set({\n      title: post.title,\n      upvote: post.upvote + 1,\n      downvote: post.downvote\n    });\n  }\n\n  handleDownvote = (post, key) => {\n    this.props.firebase.ref('posts/' + key).set({\n      title: post.title,\n      upvote: post.upvote,\n      downvote: post.downvote + 1\n    });\n  }\n\n  render() {\n\n    let posts = this.props.posts;\n    // console.log(posts);\n    let _this = this;\n\n    if (!posts) {\n      return false;\n    }\n\n    if (this.props.loading) {\n      return (\n        <div>\n          <img className=\"loading\" alt=\"loading-logo\" src=\"https://loading.io/spinners/typing/lg.-text-entering-comment-loader.gif\"/>\n        </div>\n      );\n    }\n    console.log(posts);\n    return (\n\n      \n      <div className=\"Posts\">\n        { Object.keys(posts).reverse().map(function(key) {\n            return (\n              <div className=\"single-post\">\n                  <Link id=\"postHeader\" className=\"link\" key={key}\n                    to={{\n                      pathname: '/view-post/',\n                      hash: key.toString(),\n                      state: { id: {key} },\n                    }}\n                  >  {posts[key].title}\n                  </Link>\n                  <div className = \"buttonContainer\">\n                      <div onClick={ _this.handleUpvote.bind(this, posts[key], key) }> \n                          <FontAwesome\n                            className='sortUp'\n                            name='sort-up'\n                            size='lg'\n                            // spin\n                          />\n                        <span className=\"up\">{ posts[key].upvote }</span>\n                      </div>\n                      <div onClick={ _this.handleDownvote.bind(this, posts[key], key) }> \n                          <FontAwesome\n                            className='sortDown'\n                            name='sort-down'\n                            size='lg'\n                            // spin\n                          />\n                        <span className=\"down\">{ posts[key].downvote }</span>\n                      </div>\n                  </div>\n              </div>\n            );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Posts;\n","import React, { Component } from 'react';\nimport '../globals/css/App.css';\nimport { browserHistory } from 'react-router';\n// import { withRouter } from 'react-router-dom';\n\nclass AddPost extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  state = {\n    title: ''\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.title === \"\"){\n      alert(\"Please Enter a Question\");\n      return;\n    }\n    this.props.firebase.ref('posts').push({\n      title: this.state.title,\n      upvote: 0,\n      downvote: 0,\n      for: {\n      },\n      against: {\n      }\n    });\n\n    this.setState({\n      title: ''\n    });\n    browserHistory.push('/')\n  }\n\n  render() {\n    return (\n      <div className=\"AddPost\">\n        <input \n          type=\"text\" \n          placeholder=\"Write the title of your post\" \n          onChange={ this.handleChange } \n          value={ this.state.title }\n          id=\"add-post\"\n        />\n        <button \n          type=\"submit\" \n          onClick={ this.handleSubmit }\n          class=\"submit\"\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default AddPost;\n","import React, { Component } from 'react';\n\nimport { withRouter } from \"react-router\";\n\n\n\n\n\nvar FontAwesome = require('react-fontawesome');\n\nclass About extends Component { \n\n  \n  render() {\n\n    \n    \n    return (\n    <div className = \"about_page\">\n      <header>\n        What is this Website?\n      </header>\n\n     \n\n      <footer>\n        This website is a reddit inspired react based app that allows you to post a topic and comment on those topics. \n        It also has the function of upvoting and downvoting both the debate posts as well as the comments.<br/><br/> Happy Debating!\n      </footer>\n    </div>\n  );\n  }\n}\n\nexport default withRouter(About);","import React from 'react';\nimport { IndexRoute, Router, Route } from 'react-router';\n\nimport App from './globals/App';\nimport ViewPost from './globals/ViewPost';\nimport Posts from './components/Posts';\nimport AddPost from './components/AddPost';\nimport About from './globals/About';\n\n\n\nconst Routes = (props) => (\n  <Router {...props}>\n    <Route path=\"/\" component={ App }>\n      <IndexRoute component={ Posts } />\n      <Route path=\"/posts\" component={ Posts } />\n      <Route path=\"/add-post\" component={ AddPost } />\n      <Route path=\"/view-post\" component={ ViewPost } >\n      \t<Route path=\"/view-post/:id\" component={ViewPost} />\n        \n      </Route>\n      <Route path=\"/about\" component={About}/>\n    </Route>\n\n  </Router>\n);\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { browserHistory } from 'react-router';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport Routes from './routes';\nimport registerServiceWorker from './utils/registerServiceWorker';\n\nReactDOM.render(\n  <Routes history={browserHistory} />,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}